/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Karen.cpp                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: gmayweat <gmayweat@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/08/18 03:40:26 by gmayweat          #+#    #+#             */
/*   Updated: 2021/08/18 19:15:56 by gmayweat         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "Karen.hpp"
#include <iostream>
const std::string Karen::_levels_list[Karen::ERROR + 1] = {"DEBUG",
									"INFO",
									"WARNING",
									"ERROR"};

void Karen::debug()
{
	std::cout << "[ DEBUG ]" << std::endl;
	std::cout << "Избегай блуждающего взора, что перескакивает с одного на другое"
	" и легко притягивает к блестящим вещам, которые поначалу вызывают восхищение,"
	" но затем приводят к беде. Помни: глаза не устают смотреть, но неспособны тут"
	" же отличить истинное от ложного. Человек с ущербным взором подобен сломанному "
	"зеркалу: уродство для него — красота, а красота — уродство. Удерживай взгляд "
	"на чистом и поучительном, и когда придёт час, различишь ты козни Чужого." << std::endl;
}
void Karen::info()
{
	std::cout << "[ INFO ]" << std::endl;
	std::cout << "Лживый язык подобен искре во рту. Искра мала, но от нее может"
	" вспыхнуть пожар, дотла сжигающий целые города. Лучше не проронить ни слова"
	" за всю жизнь, чем хотя бы единожды извергнуть из себя ложь. Ибо эхом"
	" отзовутся лживые слова, и будет то эхо гласом Чужого." << std::endl;
}
void Karen::warning()
{
	std::cout << "[ WARNING ]" << std::endl;
	std::cout << "Умерь беспокойные руки, ибо они быстро становятся слугами Чужого."
	" Не занятые честным трудом руки тут же устремляются к неправедной наживе,"
	" пустым стремлениям и злодеяниям. Зачем нужны руки, которые крадут, убивают"
	" и разрушают? Лучше положи их на плуг, вилы или лопату. Даже самая грязная"
	" работа, исполняемая с должным усердием, выжимает мускулы, изгоняя зло из души и тела." << std::endl;
}
void Karen::error()
{
	std::cout << "[ ERROR ]" << std::endl;
	std::cout << "Ум рассеянный легко поддаётся злу и приемлет ложь. Разве может"
	" быть два хозяина в одном теле? Нет, поскольку один будет призывать в одну"
	" сторону, второй же — в другую, покуда тело не свалится в канаву и не"
	" свернет шею. Так и две противные мысли не должны терзать разум, иначе"
	" ослабнет воля человека и падет он под напором еретических измышлений." << std::endl;
}

void Karen::complain(std::string level)
{
	void (Karen::*func[Karen::ERROR + 1])(void) = {&Karen::debug,
									&Karen::info,
									&Karen::warning,
									&Karen::error};
	int	i = 0;
	while (i <= Karen::ERROR && _levels_list[i] != level)
		++i;
	switch (i)
	{
	case Karen::DEBUG:
		(this->*func[Karen::DEBUG])();
	case Karen::INFO:
		(this->*func[Karen::INFO])();
	case Karen::WARNING:
		(this->*func[Karen::WARNING])();
	case Karen::ERROR:
		(this->*func[Karen::ERROR])();
		break;
	default:
		std::cout << "[ Probably complaining about Ousider. ]" << std::endl;
	}
}

void	Karen::complain()
{
	std::cout << "[ Probably complaining about Ousider. ]" << std::endl;
}
